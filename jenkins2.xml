pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo "Fetch the source code from ${env.DIRECTORY_PATH}"
                echo "Compile the code and generate any necessary artifacts"
                echo "Use Maven for automation"
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo "Unit tests"
                echo "Integration tests"
            }
            post {
                success {
                        emailext body: "Unit and Integration Tests have passed successfully. Attached are the test logs.", 
                        recipientProviders: [[$class: 'DevelopersRecipientProvider'], 
                        [$class: 'RequesterRecipientProvider']], 
                        subject: "Unit and Integration Tests Successful",
                        attachmentsPattern: 'test.log', 
                        attachLog: true 
                    }
                failure {
                        emailext body: "Unit and Integration Tests have failed. Attached are the test logs.", 
                        recipientProviders: [[$class: 'DevelopersRecipientProvider'], 
                        [$class: 'RequesterRecipientProvider']], 
                        subject: "Unit and Integration Tests Failed",
                        attachmentsPattern: 'test.log', 
                        attachLog: true 
                    }
                }
            }

        stage('Code Analysis') {
            steps {
                echo "Integration tests"
                echo "SonarQube Scanner for Jenkins plugin"
            }
        }

        stage('Security Scan') {
            steps {
                echo "Perform scan to find vulnerabilities"
                echo "OWASP Dependency-Check plugin"
            }
            post {
                success {
                        emailext body: "Security Scan has completed successfully.", 
                        recipientProviders: [[$class: 'DevelopersRecipientProvider'], 
                        [$class: 'RequesterRecipientProvider']], 
                        subject: "Security Scan Successful",
                        attachmentsPattern: 'test.log', 
                        attachLog: true 
                    }
                failure {
                        emailext body: "Security Scan has failed.", 
                        recipientProviders: [[$class: 'DevelopersRecipientProvider'], 
                        [$class: 'RequesterRecipientProvider']], 
                        subject: "Security Scan Failed",
                        attachmentsPattern: 'test.log', 
                        attachLog: true 
                }
            }
        }


        stage('Deploy to Staging') {
            steps {
                echo "Deploy application staging server"
                echo "Use tool such as AWS"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "run integration test"
                echo "Use tool such as JUnit"
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "deploy application"
                echo "use AWS"
            }
        }
    }
}
